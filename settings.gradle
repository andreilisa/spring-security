pluginManagement {
	repositories {
		gradlePluginPortal()
	}
}
buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'org.kordamp.gradle:enforcer-gradle-plugin:0.13.0'
	}
}
plugins {
	id "com.gradle.enterprise" version "3.12.6"
	id "io.spring.ge.conventions" version "0.0.14"
}
apply plugin: 'org.kordamp.gradle.enforcer'
enforce {
	rule(enforcer.rules.DependencyConvergence)
	rule(enforcer.rules.ExcludeDependencies) { r ->
		r.exclude("org.slf4j:slf4j-api:1.7.26")
		r.exclude("org.slf4j:slf4j-api:1.7.25")
		r.exclude("com.puppycrawl.tools:checkstyle:9.3")
		r.exclude("com.puppycrawl.tools:checkstyle:8.33")
		r.exclude("net.bytebuddy:byte-buddy:1.12.21")
		r.exclude("org.junit.jupiter:junit-jupiter-api:5.10.0")
//		r.exclude("commons-collections:commons-collections:3.2.1")
	}
}
dependencyResolutionManagement {
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/milestone" }
	}
}

rootProject.name = 'spring-security'

FileTree buildFiles = fileTree(rootDir) {
	List excludes = gradle.startParameter.projectProperties.get("excludeProjects")?.split(",")
	include '**/*.gradle', '**/*.gradle.kts'
	exclude 'build', '**/gradle', 'settings.gradle', 'buildSrc', '/build.gradle', '.*', 'out'
	exclude '**/grails3'
	if(excludes) {
		exclude excludes
	}
}

String rootDirPath = rootDir.absolutePath + File.separator
buildFiles.each { File buildFile ->

	boolean isDefaultName = 'build.gradle'.equals(buildFile.name)
	boolean isKotlin = buildFile.name.endsWith(".kts")
	if(isDefaultName) {
		String buildFilePath = buildFile.parentFile.absolutePath
		String projectPath = buildFilePath.replace(rootDirPath, '').replace(File.separator, ':')
		include projectPath
	} else {
		String projectName
		if (isKotlin) {
			projectName = buildFile.name.replace('.gradle.kts', '')
		} else {
		 	projectName = buildFile.name.replace('.gradle', '')
		}
		String projectPath = ':' + projectName;
		include projectPath
		def project = findProject("${projectPath}")
		project.name = projectName
		project.projectDir = buildFile.parentFile
		project.buildFileName = buildFile.name
	}
}
